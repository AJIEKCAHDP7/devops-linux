Command line
1. pwd - показать путь к каталогу, в котором вы сейчас находитесь в терминале.

2. ls - используется для вывода списка файлов и папок в текущем каталоге.
Примеры:
ls              # показать файлы и папки
ls -l           # подробный список (размер, права, дата)
ls -a           # показать и скрытые файлы (начинающиеся с .)
ls -lh          # размер файлов в удобном виде (KB, MB)
ls /home/user   # вывести содержимое указанной папки
ls -R           # показывает файлы и папки рекурсивно, включая вложенные каталоги 

3. cd - (сокращение от change directory) используется для перехода в другую директорию (папку).
Примеры:
cd папка_1               # перейти в папку_1
cd ..                    # подняться на уровень вверх
cd ../..                 # подняться на два уровня вверх
cd /home/user            # перейти по абсолютному пути
cd ~                     # перейти в домашнюю директорию
cd /                     # перейти в корневую директорию

4. mkdir - (от make directory) создаёт новую папку в текущем или указанном месте.
Примеры:
mkdir new_folder                # создаёт папку "new_folder" в текущем каталоге
mkdir docs images backups       # создаёт сразу несколько папок
mkdir /home/user/projects       # создаёт папку по абсолютному пути
mkdir -p projects/2025/january  # cоздать вложенные папки одной командой, флаг -p создаёт промежуточные папки, если их ещё нет.

5. touch — используется для создания пустых файлов или обновления времени последнего изменения уже существующих.
Примеры:
touch file.txt                 # cоздаёт пустой файл file.txt (если его нет). Если файл уже существует — просто обновит время изменения.
touch file1.txt file2.txt      # создаёт сразу несколько файлов.

6. rm - (remove) используется для удаления файлов и папок.
Примеры:
rm file.txt                   # удаляет файл file.txt.
rm file1.txt file2.txt        # удаляет несколько файлов сразу.
rm -r folder_name             # удаляет папку и всё её содержимое (рекурсивно). -r = recursive — обязательно при удалении каталогов.
rm -rf folder_name            # удаляет -r — рекурсивно, -f — force, без запросов «вы уверены?»
rm -rf /                      # это сотрёт всю систему.
rm -i file.txt                # терминал спросит: remove regular file 'file.txt'? (y/n)

7. clear -  используется в терминале для очистки экрана.

8. mv — (move) используется для перемещения и переименования файлов и папок.
Примеры:
mv file.txt /home/user/Documents/           # переместит file.txt в папку /home/user/Documents
mv oldname.txt newname.txt                  # переименование файла
mv file1.txt file2.txt /home/user/backup/   # перемещение нескольких файлов
mv folder1 /home/user/archive/              # переместит всю папку со всем содержимым
mv -i file.txt /somewhere/                  # c подтверждением, чтобы терминал спрашивал перед заменой, флаг -i = interactive (спрашивает «перезаписать?»).
mv -f file.txt /somewhere/                  # принудительная замена без вопросов, флаг -f = force, перезапишет без предупреждения.

9. cp – (copy) используется для копирования файлов и папок.
Примеры:
cp file.txt /home/user/backup/      # копирует файл file.txt в папку /home/user/backup/
cp file.txt newfile.txt             # копирует файл и даёт ему новое имя
cp file1.txt file2.txt /home/user/  # копирует несколько файлов в указанную папку
cp -r folder_name /home/user/       # копирует папку и всё её содержимое (-r = recursive)
cp -i file.txt /home/user/          # спросит перед перезаписью существующего файла (-i = interactive)
cp -p file.txt /home/user/          # сохраняет дату, права и владельца (-p = preserve)
cp -v file.txt /home/user/          # показывает, что копируется (-v = verbose)
cp -rpv my_folder /backup/          # копирует всё с сохранением атрибутов и прогрессом

10. history — (command history) используется для просмотра списка ранее введённых команд в терминале.
Примеры:
history                         # показывает все команды, введённые в текущей сессии
history 10                      # показывает последние 10 команд
!25                             # выполняет команду под номером 25 из списка history
!!                              # повторяет последнюю введённую команду
!ls                             # выполняет последнюю команду, начинающуюся с "ls"
history -c                      # очищает историю команд (c = clear)
history -w                      # сохраняет текущую историю в файл ~/.bash_history
По умолчанию история сохраняется в файл ~/.bash_history, и она восстанавливается при каждом новом запуске терминала.

11. Ctrl + R — используется для поиска по истории команд в терминале (обратный интерактивный поиск).
Примеры:
Ctrl + R                        # активирует режим поиска по истории команд
(reverse-i-search)`ls`:         # после нажатия начни вводить часть команды, например "ls"
Ctrl + R (повторно)             # пролистывает предыдущие совпадения по истории
Enter                           # выполняет найденную команду
Стрелка вправо →                # вставляет найденную команду в строку (не выполняет, можно отредактировать)
Ctrl + G                        # выходит из режима поиска без выполнения
Очень удобно, когда нужно быстро найти и повторить команду, введённую ранее, без прокрутки списка history

12. Ctrl + C — используется для прерывания выполнения команды или процесса в терминале.

13. Ctrl + Shift + V — используется для вставки скопированного текста (из буфера обмена) в терминал.

14. cat — (concatenate) используется для просмотра, объединения и создания файлов в терминале.
Примеры:
cat file.txt                         # показывает содержимое файла file.txt  
cat file1.txt file2.txt              # выводит содержимое нескольких файлов подряд  
cat file1.txt file2.txt > all.txt    # объединяет два файла и сохраняет результат в all.txt  
cat > newfile.txt                    # создаёт новый файл и ждёт ввода текста (нажми Ctrl + D для сохранения)  
cat >> existing.txt                  # добавляет текст в конец существующего файла  
cat -n file.txt                      # показывает файл с номерами строк (-n = number)

15. uname — (Unix name) используется для вывода информации о системе и ядре.
Примеры:
uname                               # показывает тип операционной системы (например, Linux)
uname -a                            # выводит всю доступную системную информацию
uname -r                            # показывает версию ядра (kernel release)
uname -v                            # показывает номер сборки ядра (kernel version)
uname -m                            # показывает архитектуру процессора (например, x86_64, arm64)
uname -n                            # показывает сетевое имя (hostname)
uname -s                            # показывает имя операционной системы (system name)

16. lscpu — (list CPU) используется для отображения подробной информации о процессоре и архитектуре системы. Команда читает данные из /proc/cpuinfo и других системных источников.
Примеры:
lscpu                             # показывает сводную информацию о CPU
lscpu | grep "Model name"         # выводит только модель процессора
lscpu | grep "CPU(s)"             # показывает количество ядер и потоков

17. lsmem — (list memory) используется для отображения информации об установленной оперативной памяти (RAM). Команда читает данные из /sys/devices/system/memory/.
Примеры:
lsmem                             # показывает сводку по доступной памяти
lsmem -a                          # отображает всю информацию, включая неактивные разделы памяти
lsmem --summary                   # показывает только общую информацию о памяти
lsmem --output=RANGE,SIZE,STATE   # выводит конкретные колонки (адреса, размер, состояние)

18. adduser — (add user) используется для создания нового пользователя в системе.
Примеры:
sudo adduser alex                   # создаёт нового пользователя с именем alex
sudo adduser alex sudo              # добавляет пользователя alex в группу sudo (дает права администратора)
sudo adduser alex developers        # добавляет пользователя alex в группу developers

19. su — (substitute user) используется для смены пользователя в терминале, обычно для перехода к root.
Примеры:
su                               # переключается на пользователя root (потребует пароль root)
su alex                          # переключается на пользователя alex
su -                             # переключается на root с полной средой (environment) root
su - alex                        # переключается на пользователя alex с полной средой

20. passwd — используется для изменения пароля пользователя в Linux.
Примеры:
passwd                 # изменить пароль текущего пользователя
sudo passwd username   # изменить пароль другого пользователя (нужны права root)
passwd -l username     # заблокировать пользователя (не сможет войти)
passwd -u username     # разблокировать пользователя
